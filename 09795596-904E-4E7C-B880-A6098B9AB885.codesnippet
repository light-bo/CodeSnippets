<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>@yfPlainRequest</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>//MARK: 添加收藏
struct YSAAddCollectedNewsParam {
    init(_ newsID: String, source: String) {
        self.newsID = newsID
        self.source = source
    }
    
    var newsID: String = ""
    var source: String = ""
}

struct YSAAddCollectedNewsResp: JsonInitialable {
    init?(json: ResponseJson) {}
}

@objcMembers
class YSAAddCollectedNewsRequest: YSAPlainRequest&lt;YSAAddCollectedNewsParam, YSAAddCollectedNewsResp&gt; {
    
    public override var url: String {
        let path = "/quote/user/update/addcollectednews"
        let url = YFURLManager.shared.url(with: .market, prefixPath: "/app", apiVersion: "/v1", path: path)
        
        return url
    }
    
    public override func requestParams() -&gt; Parameters? {
        guard let input = inputObj else { return nil }

        guard let uin = YFUserHierarchy.shared.userAuth?.uin else { return nil }
        
        let param: Parameters = [
            "uin": uin,
            "news_id": input.newsID,
            "source": input.source
        ]
        
        return param
    }
    
    open override func shouldCacheResponse(_ respObj: YFResponseObj&lt;YSATradePriceSpreadDataResp&gt;) -&gt; Bool {
        return true
    }
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>09795596-904E-4E7C-B880-A6098B9AB885</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>yf-plain-request</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
